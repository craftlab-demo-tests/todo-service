/*
 * todo-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Microsoft.AspNetCore.Authorization;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;
using Org.OpenAPITools.Services;

namespace Org.OpenAPITools.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DefaultApiController : ControllerBase
    {
        private ITodoService todoService;

        public DefaultApiController(ITodoService todoService) : base()
        {
            this.todoService = todoService;
        }
        /// <summary>
        /// 
        /// </summary>
        /// <param name="userid"></param>
        /// <response code="200">OK</response>
        /// <response code="404">NotFound</response>
        [HttpGet]
        [Route("/todo")]
        [ValidateModelState]
        [SwaggerOperation("TodoGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(TodoList), description: "OK")]
        public virtual IActionResult TodoGet([FromQuery] string userid)
        {
            var todo = todoService.GetTodoByUserId(userid);
            if (todo == null)
            {
                return NotFound();
            }
            return Ok(todo);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="todo"></param>
        /// <response code="201">created</response>
        [HttpPost]
        [Route("/todo")]
        [ValidateModelState]
        [SwaggerOperation("TodoPost")]
        public virtual IActionResult TodoPost([FromBody] Todo todo)
        {
            var created = todoService.AddTodo(todo);
            return Created($"/todo/{todo.Id}", created);
        }
    }
}
