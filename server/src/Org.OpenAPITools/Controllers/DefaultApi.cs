/*
 * todo-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Microsoft.AspNetCore.Authorization;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using Org.OpenAPITools.Attributes;
using Org.OpenAPITools.Models;

namespace Org.OpenAPITools.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class DefaultApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <param name="userid"></param>
        /// <response code="200">OK</response>
        /// <response code="404">NotFound</response>
        [HttpGet]
        [Route("/todo")]
        [ValidateModelState]
        [SwaggerOperation("TodoGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(TodoList), description: "OK")]
        public virtual IActionResult TodoGet([FromQuery]string userid)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(TodoList));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404);
            string exampleJson = null;
            exampleJson = "{\n  \"count\" : 0,\n  \"todos\" : [ {\n    \"id\" : 6,\n    \"title\" : \"title\",\n    \"userid\" : 1\n  }, {\n    \"id\" : 6,\n    \"title\" : \"title\",\n    \"userid\" : 1\n  } ]\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<TodoList>(exampleJson)
            : default(TodoList);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="todo"></param>
        /// <response code="201">created</response>
        [HttpPost]
        [Route("/todo")]
        [ValidateModelState]
        [SwaggerOperation("TodoPost")]
        public virtual IActionResult TodoPost([FromBody]Todo todo)
        { 

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201);

            throw new NotImplementedException();
        }
    }
}
